<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Shipment extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Shipment_model');
    } 

    /*
     * Listing of shipments
     */
    function index()
    {
        $data['shipments'] = $this->Shipment_model->get_all_shipments();
        
        $data['_view'] = 'shipment/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new shipment
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'freight' => $this->input->post('freight'),
				'isf_required' => $this->input->post('isf_required'),
				'customs' => $this->input->post('customs'),
				'is_complete' => $this->input->post('is_complete'),
				'po_boolean' => $this->input->post('po_boolean'),
				'qb_rt' => $this->input->post('qb_rt'),
				'qb_ws' => $this->input->post('qb_ws'),
				'is_active' => $this->input->post('is_active'),
				'requires_payment' => $this->input->post('requires_payment'),
				'do' => $this->input->post('do'),
				'has_documents' => $this->input->post('has_documents'),
				'product_id' => $this->input->post('product_id'),
				'vendor_id' => $this->input->post('vendor_id'),
				'trucker_id' => $this->input->post('trucker_id'),
				'status' => $this->input->post('status'),
				'po' => $this->input->post('po'),
				'container_number' => $this->input->post('container_number'),
				'bill_of_lading' => $this->input->post('bill_of_lading'),
				'discharge_port' => $this->input->post('discharge_port'),
				'final_destination' => $this->input->post('final_destination'),
				'eta' => $this->input->post('eta'),
				'lfd' => $this->input->post('lfd'),
				'pickup_number' => $this->input->post('pickup_number'),
				'truck_date' => $this->input->post('truck_date'),
				'bl_status' => $this->input->post('bl_status'),
				'latest_event_time_and_date' => $this->input->post('latest_event_time_and_date'),
				'last_update' => $this->input->post('last_update'),
				'container_size' => $this->input->post('container_size'),
				'vendor_identifier' => $this->input->post('vendor_identifier'),
				'latest_event' => $this->input->post('latest_event'),
				'container_notes' => $this->input->post('container_notes'),
            );
            
            $shipment_id = $this->Shipment_model->add_shipment($params);
            redirect('shipment/index');
        }
        else
        {
			$this->load->model('Product_model');
			$data['all_products'] = $this->Product_model->get_all_products();

			$this->load->model('Vendor_model');
			$data['all_vendors'] = $this->Vendor_model->get_all_vendors();

			$this->load->model('Trucker_model');
			$data['all_truckers'] = $this->Trucker_model->get_all_truckers();
            
            $data['_view'] = 'shipment/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a shipment
     */
    function edit($id)
    {   
        // check if the shipment exists before trying to edit it
        $data['shipment'] = $this->Shipment_model->get_shipment($id);
        
        if(isset($data['shipment']['id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'freight' => $this->input->post('freight'),
					'isf_required' => $this->input->post('isf_required'),
					'customs' => $this->input->post('customs'),
					'is_complete' => $this->input->post('is_complete'),
					'po_boolean' => $this->input->post('po_boolean'),
					'qb_rt' => $this->input->post('qb_rt'),
					'qb_ws' => $this->input->post('qb_ws'),
					'is_active' => $this->input->post('is_active'),
					'requires_payment' => $this->input->post('requires_payment'),
					'do' => $this->input->post('do'),
					'has_documents' => $this->input->post('has_documents'),
					'product_id' => $this->input->post('product_id'),
					'vendor_id' => $this->input->post('vendor_id'),
					'trucker_id' => $this->input->post('trucker_id'),
					'status' => $this->input->post('status'),
					'po' => $this->input->post('po'),
					'container_number' => $this->input->post('container_number'),
					'bill_of_lading' => $this->input->post('bill_of_lading'),
					'discharge_port' => $this->input->post('discharge_port'),
					'final_destination' => $this->input->post('final_destination'),
					'eta' => $this->input->post('eta'),
					'lfd' => $this->input->post('lfd'),
					'pickup_number' => $this->input->post('pickup_number'),
					'truck_date' => $this->input->post('truck_date'),
					'bl_status' => $this->input->post('bl_status'),
					'latest_event_time_and_date' => $this->input->post('latest_event_time_and_date'),
					'last_update' => $this->input->post('last_update'),
					'container_size' => $this->input->post('container_size'),
					'vendor_identifier' => $this->input->post('vendor_identifier'),
					'latest_event' => $this->input->post('latest_event'),
					'container_notes' => $this->input->post('container_notes'),
                );

                $this->Shipment_model->update_shipment($id,$params);            
                redirect('shipment/index');
            }
            else
            {
				$this->load->model('Product_model');
				$data['all_products'] = $this->Product_model->get_all_products();

				$this->load->model('Vendor_model');
				$data['all_vendors'] = $this->Vendor_model->get_all_vendors();

				$this->load->model('Trucker_model');
				$data['all_truckers'] = $this->Trucker_model->get_all_truckers();

                $data['_view'] = 'shipment/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The shipment you are trying to edit does not exist.');
    } 

    /*
     * Deleting shipment
     */
    function remove($id)
    {
        $shipment = $this->Shipment_model->get_shipment($id);

        // check if the shipment exists before trying to delete it
        if(isset($shipment['id']))
        {
            $this->Shipment_model->delete_shipment($id);
            redirect('shipment/index');
        }
        else
            show_error('The shipment you are trying to delete does not exist.');
    }
    
}
