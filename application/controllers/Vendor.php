<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Vendor extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Vendor_model');
    } 

    /*
     * Listing of vendors
     */
    function index()
    {
        $data['vendors'] = $this->Vendor_model->get_all_vendors();
        
        $data['_view'] = 'vendor/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new vendor
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'name' => $this->input->post('name'),
				'abbreviation' => $this->input->post('abbreviation'),
				'document_initials' => $this->input->post('document_initials'),
				'email_addresses' => $this->input->post('email_addresses'),
            );
            
            $vendor_id = $this->Vendor_model->add_vendor($params);
            redirect('vendor/index');
        }
        else
        {            
            $data['_view'] = 'vendor/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a vendor
     */
    function edit($id)
    {   
        // check if the vendor exists before trying to edit it
        $data['vendor'] = $this->Vendor_model->get_vendor($id);
        
        if(isset($data['vendor']['id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'name' => $this->input->post('name'),
					'abbreviation' => $this->input->post('abbreviation'),
					'document_initials' => $this->input->post('document_initials'),
					'email_addresses' => $this->input->post('email_addresses'),
                );

                $this->Vendor_model->update_vendor($id,$params);            
                redirect('vendor/index');
            }
            else
            {
                $data['_view'] = 'vendor/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The vendor you are trying to edit does not exist.');
    } 

    /*
     * Deleting vendor
     */
    function remove($id)
    {
        $vendor = $this->Vendor_model->get_vendor($id);

        // check if the vendor exists before trying to delete it
        if(isset($vendor['id']))
        {
            $this->Vendor_model->delete_vendor($id);
            redirect('vendor/index');
        }
        else
            show_error('The vendor you are trying to delete does not exist.');
    }
    
}
