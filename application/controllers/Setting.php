<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Setting extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Setting_model');
    } 

    /*
     * Listing of settings
     */
    function index()
    {
        $data['settings'] = $this->Setting_model->get_all_settings();
        
        $data['_view'] = 'setting/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new setting
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'theme_name' => $this->input->post('theme_name'),
				'table_header_font' => $this->input->post('table_header_font'),
				'table_header_font_size' => $this->input->post('table_header_font_size'),
				'table_header_font_weight' => $this->input->post('table_header_font_weight'),
				'table_header_font_color' => $this->input->post('table_header_font_color'),
				'table_cell_font' => $this->input->post('table_cell_font'),
				'table_cell_font_size' => $this->input->post('table_cell_font_size'),
				'table_cell_font_color' => $this->input->post('table_cell_font_color'),
				'table_width' => $this->input->post('table_width'),
            );
            
            $setting_id = $this->Setting_model->add_setting($params);
            redirect('setting/index');
        }
        else
        {            
            $data['_view'] = 'setting/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a setting
     */
    function edit($id)
    {   
        // check if the setting exists before trying to edit it
        $data['setting'] = $this->Setting_model->get_setting($id);
        
        if(isset($data['setting']['id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'theme_name' => $this->input->post('theme_name'),
					'table_header_font' => $this->input->post('table_header_font'),
					'table_header_font_size' => $this->input->post('table_header_font_size'),
					'table_header_font_weight' => $this->input->post('table_header_font_weight'),
					'table_header_font_color' => $this->input->post('table_header_font_color'),
					'table_cell_font' => $this->input->post('table_cell_font'),
					'table_cell_font_size' => $this->input->post('table_cell_font_size'),
					'table_cell_font_color' => $this->input->post('table_cell_font_color'),
					'table_width' => $this->input->post('table_width'),
                );

                $this->Setting_model->update_setting($id,$params);            
                redirect('setting/index');
            }
            else
            {
                $data['_view'] = 'setting/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The setting you are trying to edit does not exist.');
    } 

    /*
     * Deleting setting
     */
    function remove($id)
    {
        $setting = $this->Setting_model->get_setting($id);

        // check if the setting exists before trying to delete it
        if(isset($setting['id']))
        {
            $this->Setting_model->delete_setting($id);
            redirect('setting/index');
        }
        else
            show_error('The setting you are trying to delete does not exist.');
    }
    
}
