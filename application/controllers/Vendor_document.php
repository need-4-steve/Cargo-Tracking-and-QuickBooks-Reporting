<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Vendor_document extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Vendor_document_model');
    } 

    /*
     * Listing of vendor_documents
     */
    function index()
    {
        $data['vendor_documents'] = $this->Vendor_document_model->get_all_vendor_documents();
        
        $data['_view'] = 'vendor_document/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new vendor_document
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'vendor_id' => $this->input->post('vendor_id'),
				'shipment_id' => $this->input->post('shipment_id'),
				'document_type' => $this->input->post('document_type'),
				'po_number' => $this->input->post('po_number'),
				'filename' => $this->input->post('filename'),
				'filepath' => $this->input->post('filepath'),
				'file_extension' => $this->input->post('file_extension'),
				'md5_hash' => $this->input->post('md5_hash'),
				'identifying_label' => $this->input->post('identifying_label'),
				'creation_timestamp' => $this->input->post('creation_timestamp'),
            );
            
            $vendor_document_id = $this->Vendor_document_model->add_vendor_document($params);
            redirect('vendor_document/index');
        }
        else
        {
			$this->load->model('Vendor_model');
			$data['all_vendors'] = $this->Vendor_model->get_all_vendors();

			$this->load->model('Shipment_model');
			$data['all_shipments'] = $this->Shipment_model->get_all_shipments();
            
            $data['_view'] = 'vendor_document/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a vendor_document
     */
    function edit($id)
    {   
        // check if the vendor_document exists before trying to edit it
        $data['vendor_document'] = $this->Vendor_document_model->get_vendor_document($id);
        
        if(isset($data['vendor_document']['id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'vendor_id' => $this->input->post('vendor_id'),
					'shipment_id' => $this->input->post('shipment_id'),
					'document_type' => $this->input->post('document_type'),
					'po_number' => $this->input->post('po_number'),
					'filename' => $this->input->post('filename'),
					'filepath' => $this->input->post('filepath'),
					'file_extension' => $this->input->post('file_extension'),
					'md5_hash' => $this->input->post('md5_hash'),
					'identifying_label' => $this->input->post('identifying_label'),
					'creation_timestamp' => $this->input->post('creation_timestamp'),
                );

                $this->Vendor_document_model->update_vendor_document($id,$params);            
                redirect('vendor_document/index');
            }
            else
            {
				$this->load->model('Vendor_model');
				$data['all_vendors'] = $this->Vendor_model->get_all_vendors();

				$this->load->model('Shipment_model');
				$data['all_shipments'] = $this->Shipment_model->get_all_shipments();

                $data['_view'] = 'vendor_document/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The vendor_document you are trying to edit does not exist.');
    } 

    /*
     * Deleting vendor_document
     */
    function remove($id)
    {
        $vendor_document = $this->Vendor_document_model->get_vendor_document($id);

        // check if the vendor_document exists before trying to delete it
        if(isset($vendor_document['id']))
        {
            $this->Vendor_document_model->delete_vendor_document($id);
            redirect('vendor_document/index');
        }
        else
            show_error('The vendor_document you are trying to delete does not exist.');
    }
    
}
